/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode* head){
        int count=0;
        ListNode* temp=head;
        while(temp!=0){
            count++;
            temp=temp->next;
        }
        return count;
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==0 || head->next==0){
            return head;
        }
        int len=length(head);
        if(k>len){
            return head; 
        }
        ListNode* prev=nullptr;
          ListNode* next=nullptr;
            ListNode* curr=head;
            int count=0;

            while(count<k){
                next=curr->next;
                curr->next=prev;
                prev=curr;
                curr=next;
                count++;
            }
        if(curr!=nullptr){
                head->next=reverseKGroup(curr,k);
           }
            return prev;
    }
};
